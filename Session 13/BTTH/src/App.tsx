import { Component } from 'react'
import "./styles.css"
import TodoItem from './components/TodoItem'

interface Todo {
  id: number
  content: string
  isDone: boolean
}
interface StateType {
  todos: Todo[]
  inputTodo: string
}

export default class App extends Component<{}, StateType> {
  constructor(props: {}) {
    super(props)
    this.state = {
      todos: [
        { id: 1, content: "C√¥ng vi·ªác 1", isDone: true },
        { id: 2, content: "C√¥ng vi·ªác 2", isDone: true },
        { id: 3, content: "C√¥ng vi·ªác 3", isDone: false },
      ],
      inputTodo: ""
    }
  }
  render() {
    let { todos } = this.state
    const handleInputTodo = (e: React.ChangeEvent<HTMLInputElement>) => {
      this.setState({
        inputTodo: e.target.value
      })
    }
    const addTodo = () => {
      let newTodo: Todo = {
        id: todos.length,
        content: this.state.inputTodo,
        isDone: false
      }
      this.setState({
        todos: [...todos, newTodo]
      })
    }

    return (
      <div className="container">
        {/* Header */}
        <div className="header">
          <h1>üìù TodoList</h1>
          <p>Qu·∫£n l√Ω c√¥ng vi·ªác hi·ªáu qu·∫£</p>
        </div>
        {/* Input Section */}
        <div className="input-section">
          <div className="input-group">
            <input
              type="text"
              className="task-input"
              placeholder="Nh·∫≠p c√¥ng vi·ªác c·∫ßn l√†m..."
              maxLength={100}
              onChange={handleInputTodo}
            />
            <button className="add-btn" onClick={addTodo}>‚ûï Th√™m</button>
          </div>
          <div className="error-message">{/* Th√¥ng b√°o l·ªói s·∫Ω hi·ªÉn th·ªã ·ªü ƒë√¢y */}</div>
        </div>
        {/* Empty State */}
        {todos.length === 0 ? <div className="empty-state">
          <div className="empty-state-icon">üìã</div>
          <div className="empty-state-text">Ch∆∞a c√≥ c√¥ng vi·ªác n√†o</div>
          <div className="empty-state-subtext">
            H√£y th√™m c√¥ng vi·ªác ƒë·∫ßu ti√™n c·ªßa b·∫°n!
          </div>
        </div>
          : <div className="todo-list">
            {/* Todo List */}
            {todos.map((todo) => {
              return <TodoItem key={todo.id} content={todo.content} isDone={todo.isDone}></TodoItem>
            })}
          </div>}
        {/* Footer */}
        <div className="footer">
          <div className="task-counter">
            ƒê√£ ho√†n th√†nh: <span className="counter-number">{todos.filter((todo) => todo.isDone).length}</span> /
            <span className="counter-number">{todos.length}</span> c√¥ng vi·ªác
          </div>
        </div>
      </div>
    )
  }
}
